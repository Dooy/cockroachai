services:
  mysql:
    image: mysql:8
    #command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    command: --mysql-native-password=ON --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    restart: always
    volumes:
      - ./data/mysql/:/var/lib/mysql/
      - ./docker-entrypoint-initdb.d/:/docker-entrypoint-initdb.d/
    environment:
      TZ: Asia/Shanghai # 指定时区
      MYSQL_ROOT_PASSWORD: "123456" # 配置root用户密码
      MYSQL_DATABASE: "cool" # 业务库名
      MYSQL_USER: "cool" # 业务库用户名
      MYSQL_PASSWORD: "123123" # 业务库密码
    ports:
       - 3361:3306 
  redis:
    image: redis
    restart: always
    environment:
      TZ: Asia/Shanghai # 指定时区
    volumes:
      - ./data/redis/:/data/
  chatgpt-api-server: #只做管理
    image: xyhelper/chatgpt-api-server:latest
    container_name: chatgpt-api-server
    restart: always
    ports:
      #- 7030:8001 #
      - 7032:8001 #管理端口 添加账号 http://ip:7032/xyhelper
    environment:
      TZ: Asia/Shanghai # 指定时区
      CHATPROXY: ${LOGINPROXY}  # 接入网关地址
      AUTHKEY: "xyhelper"
    volumes:
      - ./data/chatgpt-api-server/:/app/data/
    labels:
      - "com.centurylinklabs.watchtower.scope=xyhelper-chatgpt-api-server"
  chatgpt-api-server-my: #真正的业务
    image: hts999/chatgpt-api-server:latest
    container_name: chatgpt-api-server-my
    restart: always
    ports:
      - 7033:8001 # http://ip:7033/v1/chat/completions
    environment:
      TZ: Asia/Shanghai # 指定时区
      CHATPROXY: "http://172.17.0.1:7999" # 业务ninja接入网关地址 
      LOGINPROXY: ${LOGINPROXY} # 账号登录用到xy的 ninjia没符合 applogin 的接口 接入网关地址 
      AUTHKEY: "xyhelper"
      PLUSN: 1  #plus账后不多复用轮训 如果账号多就不要去起这个了
      OAIAPI: ${OAIAPI}
      CHAT2API: ${CHAT2API}
      #ALLSSE: 1
      #IGNORE_CONTENT_LENGTH: "yes" #3.5 会超过8k阶段
    volumes:
      - ./data/chatgpt-api-server-my/:/app/data/
    labels:
      - "com.centurylinklabs.watchtower.scope=xyhelper-chatgpt-api-server"
